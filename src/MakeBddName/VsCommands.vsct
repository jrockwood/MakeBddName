<?xml version="1.0" encoding="utf-8"?>
<CommandTable xmlns="http://schemas.microsoft.com/VisualStudio/2005-10-18/CommandTable" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!--
  This is the file that defines the actual layout and type of the commands. It is divided in
  different sections (e.g. command definition, command placement, ...), with each defining a
  specific set of properties. See the comment before each section for more details about how to use it.
  -->

  <!--
  The VSCT compiler (the tool that translates this file into the binary format that VisualStudio
  will consume) has the ability to run a preprocessor on the vsct file; this preprocessor is
  (usually) the C++ preprocessor, so it is possible to define includes and macros with the same
  syntax used in C++ files. Using this ability of the compiler here, we include some files defining
  some of the constants that we will use inside the file.
  -->

  <!--This is the file that defines the IDs for all the commands exposed by VisualStudio. -->
  <Extern href="stdidcmd.h" />

  <!--This header contains the command ids for the menus provided by the shell. -->
  <Extern href="vsshlids.h" />

  <!-- This file contains well-known image ids -->
  <Include href="KnownImageIds.vsct" />

  <!--
  The Commands section is where commands, menus, and menu groups are defined. This section uses a
  Guid to identify the package that provides the command defined inside it.
  -->
  <Commands package="PackageGuid">
    <!--
    Inside this section we have different sub-sections: one for the menus, another for the menu
    groups, one for the buttons (the actual commands), one for the combos and the last one for the
    bitmaps used. Each element is identified by a command id that is a unique pair of guid and
    numeric identifier; the guid part of the identifier is usually called "command set" and is used
    to group different command inside a logically related group; your package should define its own
    command set in order to avoid collisions with command ids defined by other packages.
    -->

    <!--
    In this section you can define new menu groups. A menu group is a container for other menus or
    buttons (commands); from a visual point of view you can see the group as the part of a menu
    contained between two lines. The parent of a group must be a menu.
    -->
    <Groups>
      <Group guid="TopMenuGuid" id="TopMenu" priority="0x0001" />
    </Groups>

    <!-- Buttons section. -->
    <!--
    This section defines the elements the user can interact with, like a menu command or a button or
    combo box in a toolbar.
    -->
    <Buttons>
      <!--
      To define a menu group you have to specify its ID, the parent menu and its display priority.
      The command is visible and enabled by default. If you need to change the visibility, status,
      etc, you can use the CommandFlag node.

      You can add more than one CommandFlag node e.g.:
        <CommandFlag>DefaultInvisible</CommandFlag>
        <CommandFlag>DynamicVisibility</CommandFlag>

      If you do not want an image next to your command, remove the Icon node
      -->
      <Button guid="MakeBddNameCmdSetGuid" id="MakeBddNameCommandId" priority="0x0100" type="Button">
        <Parent guid="TopMenuGuid" id="TopMenu" />
        <Icon guid="ImageCatalogGuid" id="ConvertToCodeWebTest" />
        <CommandFlag>DynamicVisibility</CommandFlag>
        <CommandFlag>IconAndText</CommandFlag>
        <CommandFlag>IconIsMoniker</CommandFlag>
        <Strings>
          <ButtonText>Make BDD Name</ButtonText>
        </Strings>
      </Button>
    </Buttons>

    <!-- The bitmaps section is used to define the bitmaps that are used for the commands. -->
    <!--<Bitmaps>-->
    <!--
      The bitmap id is defined in a way that is a little bit different from the others: the
      declaration starts with a guid for the bitmap strip, then there is the resource id of the
      bitmap strip containing the bitmaps and then there are the numeric ids of the elements used
      inside a button definition. An important aspect of this declaration is that the element id
      must be the actual index (1-based) of the bitmap inside the bitmap strip.
      -->
    <!--<Bitmap guid="guidImages" href="Resources\MakeBddNameCommand.png" usedList="bmpPic1, bmpPic2, bmpPicSearch, bmpPicX, bmpPicArrows, bmpPicStrikethrough" />-->
    <!--</Bitmaps>-->
  </Commands>

  <CommandPlacements>
    <CommandPlacement guid="TopMenuGuid" id="TopMenu" priority="0x0c00">
      <Parent guid="guidSHLMainMenu" id="IDM_VS_MENU_EDIT" />
    </CommandPlacement>
    <CommandPlacement guid="TopMenuGuid" id="TopMenu" priority="0x0150">
      <Parent guid="guidSHLMainMenu" id="IDM_VS_CTXT_CODEWIN" />
    </CommandPlacement>
  </CommandPlacements>

  <VisibilityConstraints>
    <VisibilityItem guid="MakeBddNameCmdSetGuid" id="MakeBddNameCommandId" context="GUID_TextEditorFactory" />
  </VisibilityConstraints>

  <KeyBindings>
    <!-- VK_OEM_7 is the single/double quote on the US standard keyboard -->
    <KeyBinding guid="MakeBddNameCmdSetGuid" id="MakeBddNameCommandId" mod1="Control" key1="VK_OEM_7"
                mod2="Control" key2="VK_OEM_7" editor="GUID_TextEditorFactory" />
  </KeyBindings>

  <Symbols>
    <!-- This is the package guid. -->
    <GuidSymbol name="PackageGuid" value="{c6f71eb1-1c7f-4158-877b-7d4b8e6dc5cc}" />

    <GuidSymbol name="TopMenuGuid" value="{98aed3f7-0463-4de4-91fd-1e66a0975e58}">
      <IDSymbol name="TopMenu" value="0x3001" />
    </GuidSymbol>

    <!-- This is the guid used to group the menu commands together -->
    <GuidSymbol name="MakeBddNameCmdSetGuid" value="{939ce9d0-7724-4468-95c8-d073c7d5ea9e}">
      <IDSymbol name="MakeBddNameCommandId" value="0x0100" />
    </GuidSymbol>
  </Symbols>
</CommandTable>
